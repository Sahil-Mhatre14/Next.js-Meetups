{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Web Development\\\\NextJS\\\\Meetups Project\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    img: props.meetupData.img,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://Sahil:sahil2000@cluster0.8iytytr.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  const paths = meetups.map(meetup => {\n    return {\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    };\n  });\n  return {\n    fallback: false,\n    paths: paths\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://Sahil:sahil2000@cluster0.8iytytr.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = meetupsCollection.find({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        img: selectedMeetup.image,\n        title: selectedMeetup.title,\n        description: selectedMeetup.description,\n        address: selectedMeetup.address\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["D:/Web Development/NextJS/Meetups Project/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","MeetupDetail","MeetupDetails","props","meetupData","img","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","paths","map","meetup","params","meetupId","toString","fallback","getStaticProps","context","selectedMeetup","close","image"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,YAAD;AACE,IAAA,GAAG,EAAEA,KAAK,CAACC,UAAN,CAAiBC,GADxB;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACK;AAJrB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,gGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEA,QAAMC,KAAK,GAAGJ,OAAO,CAACK,GAAR,CAAaC,MAAD,IAAY;AACpC,WAAO;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACJ,GAAP,CAAWO,QAAX;AAAZ;AAAV,KAAP;AACD,GAFa,CAAd;AAIA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELN,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID;AAED,OAAO,eAAeO,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMJ,QAAQ,GAAGI,OAAO,CAACL,MAAR,CAAeC,QAAhC;AACA,QAAMb,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,gGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMc,cAAc,GAAGf,iBAAiB,CAACG,IAAlB,CAAuB;AAAEC,IAAAA,GAAG,EAAEjB,QAAQ,CAACuB,QAAD;AAAf,GAAvB,CAAvB;AACAb,EAAAA,MAAM,CAACmB,KAAP;AAEA,SAAO;AACL1B,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVC,QAAAA,GAAG,EAAEuB,cAAc,CAACE,KADV;AAEVxB,QAAAA,KAAK,EAAEsB,cAAc,CAACtB,KAFZ;AAGVE,QAAAA,WAAW,EAAEoB,cAAc,CAACpB,WAHlB;AAIVD,QAAAA,OAAO,EAAEqB,cAAc,CAACrB;AAJd;AADP;AADF,GAAP;AAUD;AAED,eAAeL,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nfunction MeetupDetails(props) {\r\n  return (\r\n    <MeetupDetail\r\n      img={props.meetupData.img}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.description}\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Sahil:sahil2000@cluster0.8iytytr.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  const paths = meetups.map((meetup) => {\r\n    return { params: { meetupId: meetup._id.toString() } };\r\n  });\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: paths,\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Sahil:sahil2000@cluster0.8iytytr.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const selectedMeetup = meetupsCollection.find({ _id: ObjectId(meetupId) });\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        img: selectedMeetup.image,\r\n        title: selectedMeetup.title,\r\n        description: selectedMeetup.description,\r\n        address: selectedMeetup.address,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}